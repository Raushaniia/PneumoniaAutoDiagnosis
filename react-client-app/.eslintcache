[{"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js":"1","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js":"2","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js":"3","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js":"4","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js":"5","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\login.component.js":"6","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\signup.component.js":"7","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patients.js":"8"},{"size":594,"mtime":1613995551301,"results":"9","hashOfConfig":"10"},{"size":1754,"mtime":1614031355943,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3974,"mtime":1613986043012,"results":"13","hashOfConfig":"10"},{"size":4196,"mtime":1614009770980,"results":"14","hashOfConfig":"10"},{"size":2350,"mtime":1614030373353,"results":"15","hashOfConfig":"10"},{"size":2566,"mtime":1614022965351,"results":"16","hashOfConfig":"10"},{"size":6603,"mtime":1614031599573,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"12sycmg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js",["40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["41","42"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js",["43","44","45"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js",[],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js",["46","47","48","49","50","51"],"import React, { Component } from 'react';\r\nconst ReactDOM = require('react-dom');\r\nconst Route = require('react-router-dom').Route;\r\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\r\nconst hashHistory = require('react-router-dom').hashHistory;\r\n\r\nclass PatientCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div class=\"container-fluid\">\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarTogglerDemo03\"\r\n              aria-controls=\"navbarTogglerDemo03\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n              Pneumonia Auto diagnosis\r\n            </a>\r\n            <div\r\n              class=\"collapse navbar-collapse\"\r\n              id=\"navbarTogglerDemo03\"\r\n            ></div>\r\n          </div>\r\n        </nav>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <center>\r\n                <h1 class=\"h3 mb-3 fw-normal\">Add patient:</h1>\r\n              </center>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <form class=\"row g-5\">\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"inputName\"\r\n                    placeholder=\"Sam Smith\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Date Of Birth\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"inputDate\"\r\n                    placeholder=\"2019-01-31T10:00:00.000Z\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id=\"gridCheck\"\r\n                    />\r\n                    <label class=\"form-check-label\" for=\"gridCheck\">\r\n                      Pneumonia status\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <button\r\n                    onClick={() =>\r\n                      addPatient(\r\n                        document.getElementById(\"inputName\").value,\r\n                        document.getElementById(\"inputDate\").value,\r\n                        document.getElementById(\"gridCheck\").checked ? 1 : 0\r\n                      )\r\n                    }\r\n                    type=\"submit\" class=\"btn btn-success\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nfunction addPatient(newName, newDateOfBirh, status) {\r\n  const patient = {\r\n    Name: newName,\r\n    DateOfBirth: new Date(),\r\n    Status: status,\r\n  };\r\n  fetch(\"https://localhost:44399/api/patient/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(patient),\r\n  })\r\n    \r\n    .catch(console.log);\r\n}\r\n\r\nexport default PatientCard;","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js",["52","53","54","55","56","57"],"import React, { Component } from \"react\";\r\nconst ReactDOM = require(\"react-dom\");\r\nconst Route = require(\"react-router-dom\").Route;\r\nconst BrowserRouter = require(\"react-router-dom\").BrowserRouter;\r\nconst hashHistory = require(\"react-router-dom\").hashHistory;\r\n\r\nclass PatientCardUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div class=\"container-fluid\">\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarTogglerDemo03\"\r\n              aria-controls=\"navbarTogglerDemo03\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n              Pneumonia Auto diagnosis\r\n            </a>\r\n\r\n            <div\r\n              class=\"collapse navbar-collapse\"\r\n              id=\"navbarTogglerDemo03\"\r\n            ></div>\r\n          </div>\r\n        </nav>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <center>\r\n                <h1 class=\"h3 mb-3 fw-normal\">Update patient:</h1>\r\n              </center>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <form class=\"row g-5\">\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={this.props.name}\r\n                    class=\"form-control\"\r\n                    id=\"inputName\"\r\n                    placeholder=\"Sam Smith\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Date Of Birth\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={this.props.date}\r\n                    class=\"form-control\"\r\n                    id=\"inputDate\"\r\n                    placeholder=\"2019-01-31T10:00:00.000Z\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      defaultChecked={this.props.status}\r\n                      type=\"checkbox\"\r\n                      id=\"gridCheck\"\r\n                    />\r\n                    <label class=\"form-check-label\" for=\"gridCheck\">\r\n                      Pneumonia status\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <button\r\n                    onClick={() =>\r\n                      updatePatient(\r\n                        this.props.id,\r\n                        document.getElementById(\"inputName\").value,\r\n                        document.getElementById(\"inputDate\").value,\r\n                        document.getElementById(\"gridCheck\").checked ? 1 : 0\r\n                      )\r\n                    }\r\n                    class=\"btn btn-success\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction updatePatient(id, newName, newDateOfBirh, status) {\r\n  const patient = {\r\n    Id: id,\r\n    Name: newName,\r\n    DateOfBirth: new Date(),\r\n    Status: status,\r\n  };\r\n  fetch(\"https://localhost:44399/api/patient/\" + id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(patient),\r\n  });\r\n}\r\n\r\nexport default PatientCardUpdate;\r\n","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\login.component.js",["58","59","60","61","62"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Patients from './patients';\r\nimport { useHistory } from \"react-router-dom\"; \r\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\r\nconst hashHistory = require('react-router-dom').hashHistory;\r\nconst ReactDOM = require('react-dom');\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return ( \r\n            <Router history={hashHistory}>\r\n            <Route\r\n              path=\"/sign-in\"\r\n              exact\r\n              render={(props) => (\r\n                <div>\r\n            <form>\r\n                <h3>Sign In</h3>\r\n               \r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n                <Link\r\n                        class=\"btn btn-outline-success\"\r\n                        to=\"/patients\"\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                            logInUser(\r\n                              document.getElementById(\"inputEmail\").value,\r\n                              document.getElementById(\"inputPassword\").value\r\n                            )}\r\n                      >\r\n                        Search\r\n                      </Link>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">sign in?</a>\r\n                </p>\r\n            </form>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route path=\"/patients\" component={Patients} />\r\n      </Router>\r\n        );\r\n    }\r\n}\r\nfunction logInUser(email, password) {\r\n    const patient = {\r\n      Email: email,\r\n      Password: password   \r\n    };\r\n    fetch(\"https://localhost:44399/api/user/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //body: JSON.stringify(patient),\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n\r\n\r\n","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\signup.component.js",["63","64"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Patients from './patients';\r\n\r\nclass SignUp extends Component {\r\n    \r\n    render() {\r\n        return ( \r\n            <Router>\r\n            <Route\r\n              path=\"/sign-up\"\r\n              exact\r\n              render={(props) => (\r\n                <div>\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" id=\"inputFirstName\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" id=\"inputLastName\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n                <Link\r\n                        class=\"btn btn-outline-success\"\r\n                        to=\"/patients\"\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                            addUser(\r\n                              document.getElementById(\"inputEmail\").value,\r\n                              document.getElementById(\"inputPassword\").value\r\n                            )}\r\n                      >\r\n                        Search\r\n                      </Link>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">sign in?</a>\r\n                </p>\r\n            </form>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route path=\"/patients\" component={Patients} />\r\n      </Router>\r\n        );\r\n    }\r\n}\r\n\r\nfunction addUser(email, password) {\r\n    const patient = {\r\n      Email: email,\r\n      Password: password   \r\n    };\r\n    fetch(\"https://localhost:44399/api/user/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(patient),\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n\r\n  export default SignUp;","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patients.js",["65","66","67","68","69"],{"ruleId":"70","severity":1,"message":"71","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":23},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":13,"column":10,"nodeType":"72","messageId":"73","endLine":13,"endColumn":20},{"ruleId":"70","severity":1,"message":"79","line":15,"column":7,"nodeType":"72","messageId":"73","endLine":15,"endColumn":15},{"ruleId":"70","severity":1,"message":"80","line":16,"column":7,"nodeType":"72","messageId":"73","endLine":16,"endColumn":20},{"ruleId":"70","severity":1,"message":"79","line":2,"column":7,"nodeType":"72","messageId":"73","endLine":2,"endColumn":15},{"ruleId":"70","severity":1,"message":"81","line":3,"column":7,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"80","line":4,"column":7,"nodeType":"72","messageId":"73","endLine":4,"endColumn":20},{"ruleId":"70","severity":1,"message":"82","line":5,"column":7,"nodeType":"72","messageId":"73","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":10,"endColumn":4},{"ruleId":"87","severity":1,"message":"88","line":27,"column":13,"nodeType":"89","endLine":27,"endColumn":46},{"ruleId":"70","severity":1,"message":"79","line":2,"column":7,"nodeType":"72","messageId":"73","endLine":2,"endColumn":15},{"ruleId":"70","severity":1,"message":"81","line":3,"column":7,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"70","severity":1,"message":"80","line":4,"column":7,"nodeType":"72","messageId":"73","endLine":4,"endColumn":20},{"ruleId":"70","severity":1,"message":"82","line":5,"column":7,"nodeType":"72","messageId":"73","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":10,"endColumn":4},{"ruleId":"87","severity":1,"message":"88","line":27,"column":13,"nodeType":"89","endLine":27,"endColumn":46},{"ruleId":"70","severity":1,"message":"90","line":2,"column":35,"nodeType":"72","messageId":"73","endLine":2,"endColumn":41},{"ruleId":"70","severity":1,"message":"78","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":20},{"ruleId":"70","severity":1,"message":"80","line":5,"column":7,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":42,"column":40,"nodeType":"89","endLine":42,"endColumn":52},{"ruleId":"70","severity":1,"message":"91","line":54,"column":11,"nodeType":"72","messageId":"73","endLine":54,"endColumn":18},{"ruleId":"70","severity":1,"message":"90","line":2,"column":35,"nodeType":"72","messageId":"73","endLine":2,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":49,"column":40,"nodeType":"89","endLine":49,"endColumn":52},{"ruleId":"70","severity":1,"message":"90","line":2,"column":35,"nodeType":"72","messageId":"73","endLine":2,"endColumn":41},{"ruleId":"70","severity":1,"message":"78","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"70","severity":1,"message":"80","line":6,"column":7,"nodeType":"72","messageId":"73","endLine":6,"endColumn":20},{"ruleId":"70","severity":1,"message":"79","line":8,"column":7,"nodeType":"72","messageId":"73","endLine":8,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":73,"column":19,"nodeType":"89","endLine":73,"endColumn":52},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useHistory' is defined but never used.","'ReactDOM' is assigned a value but never used.","'BrowserRouter' is assigned a value but never used.","'Route' is assigned a value but never used.","'hashHistory' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Switch' is defined but never used.","'patient' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]