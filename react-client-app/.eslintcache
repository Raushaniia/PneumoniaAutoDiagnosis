[{"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js":"1","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js":"2","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js":"3","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\contacts.js":"4","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js":"5","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js":"6"},{"size":545,"mtime":1612789446364,"results":"7","hashOfConfig":"8"},{"size":735,"mtime":1613921169421,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3417,"mtime":1612984583112,"results":"11","hashOfConfig":"8"},{"size":2817,"mtime":1612943251013,"results":"12","hashOfConfig":"8"},{"size":4193,"mtime":1613983650293,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12sycmg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js",[],["30","31"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js",["32","33","34","35","36","37","38"],"import React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nconst ReactDOM = require('react-dom');\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\nconst hashHistory = require('react-router-dom').hashHistory;\n\n\nclass App extends Component {\n  state = {\n    contacts: []\n  }\n  \n  componentDidMount() {\n    fetch('https://localhost:44399/api/patient')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ contacts: data })\n    })\n    .catch(console.log)\n  }\n\n\n  render() {\n    return (\n      <Contacts contacts={this.state.contacts} />  \n          \n    );\n  }\n}\n\n\n\nexport default App;","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js",[],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\contacts.js",["39"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link } from \"react-router-dom\";\r\nimport PatientCard from './patient-card';\r\nimport PatientCardUpdate from './patient-card-update';\r\n\r\nlet patientId;\r\nlet patientName;\r\nlet patientDate;\r\nlet patientStatus;\r\n\r\nfunction setPatient(id, name, date, status)\r\n{\r\n  patientId = id;\r\n  patientName = name;\r\n  patientDate = date;\r\n  patientStatus = status;\r\n}\r\n    const Contacts = ({ contacts }) => {\r\n      function deletePatient(id) {\r\n        fetch('https://localhost:44399/api/patient/' + id, \r\n        {method: 'DELETE' })\r\n        .then(res => res.json())\r\n          .then((data) => {\r\n            this.setState({ contacts: data.filter((contact) => contact.id !== id) })\r\n          })\r\n          .catch(console.log)\r\n      }\r\n      \r\n      return (\r\n        <body>\r\n          <Router>\r\n        <div>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n\r\n      <Route path='/' exact render= {(props) => (\r\n<div>\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div class=\"container-fluid\">\r\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <a class=\"navbar-brand\" href=\"#\">Pneumonia Auto diagnosis</a>\r\n  \r\n  <Link to='/add-patient' class=\"btn btn-success me-md-2\" type=\"button\">Add a new patient</Link>\r\n  \r\n  <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n    <form class=\"col-12 d-flex  justify-content-end\">\r\n      <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <Link class=\"btn btn-outline-success\" to=\"/about\" type=\"submit\">Search</Link>\r\n    </form>\r\n  </div>\r\n</div>\r\n</nav>\r\n<div class=\"container\">\r\n<div class=\"row\">\r\n  <div class=\"col-2\">\r\n  </div>\r\n  <div class=\"col-8\">\r\n  <center><h1 class=\"h3 mb-3 fw-normal\">Patient list:</h1></center>\r\n  </div>\r\n  <div class=\"col-2\">\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-2\">\r\n  </div>\r\n  <div class=\"col-8\">\r\n  <table class=\"table table-striped\">\r\n<thead>\r\n  <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Date Of Birth</th>\r\n    <th scope=\"col\">Status</th>\r\n    <th scope=\"col\">Update</th>\r\n    <th scope=\"col\">Remove</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n  {contacts.map((contact) => (\r\n      <tr>\r\n    <th scope=\"row\">1</th>\r\n    <td>{contact.name}</td>\r\n    <td>{contact.dateOfBirth}</td>\r\n    <td>{contact.status}</td>\r\n    <td> <Link to='/update-patient/' onClick={() => setPatient(contact.id, contact.name, contact.dateOfBirth, contact.status)} class=\"btn btn-success\" type=\"button\">Update</Link></td>\r\n    <td><button onClick={() => deletePatient(contact.id)}  class=\"btn btn-danger\" type=\"button\">Remove</button></td>\r\n    </tr>\r\n    ))}  \r\n  </tbody>\r\n      </table>\r\n  </div>\r\n  <div class=\"col-2\">\r\n  </div>\r\n  </div>     \r\n      </div>\r\n      </div>\r\n      )}/>\r\n      <Route path='/add-patient' component={PatientCard } />\r\n      <Route path='/update-patient'  render={() => <PatientCardUpdate id={patientId} name={patientName} date={patientDate} status={patientStatus}></PatientCardUpdate>} /></Router>\r\n        </body>\r\n      )\r\n    };\r\n\r\n    export default Contacts\r\n","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js",["40","41","42","43","44","45"],"import React, { Component } from 'react';\r\nconst ReactDOM = require('react-dom');\r\nconst Route = require('react-router-dom').Route;\r\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\r\nconst hashHistory = require('react-router-dom').hashHistory;\r\n\r\nclass PatientCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div class=\"container-fluid\">\r\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <a class=\"navbar-brand\" href=\"#\">Pneumonia Auto diagnosis</a>\r\n \r\n  <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n\r\n  </div>\r\n</div>\r\n</nav>\r\n<div class=\"container\">\r\n<div class=\"row\">\r\n  <div class=\"col-2\">\r\n  </div>\r\n  <div class=\"col-8\">\r\n  <center><h1 class=\"h3 mb-3 fw-normal\">Add patient:</h1></center>\r\n  </div>\r\n  <div class=\"col-2\">\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-2\">\r\n  </div>\r\n  <div class=\"col-8\">\r\n  <form class=\"row g-5\">\r\n  <div class=\"col-12\">\r\n    <label for=\"inputAddress\" class=\"form-label\">Full Name</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"inputName\" placeholder=\"Sam Smith\"/>\r\n  </div>\r\n  <div class=\"col-12\">\r\n    <label for=\"inputAddress\" class=\"form-label\">Date Of Birth</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"inputDate\" placeholder=\"2019-01-31T10:00:00.000Z\"/>\r\n  </div>\r\n  <div class=\"col-9\">\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\"/>\r\n      <label class=\"form-check-label\" for=\"gridCheck\">\r\n      Pneumonia status\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-9\">\r\n    <button onClick={() => addPatient(document.getElementById('inputName').value, document.getElementById('inputDate').value, document.getElementById('gridCheck').checked ? 1: 0)} type=\"submit\" class=\"btn btn-success\">Save</button>\r\n  </div>\r\n</form>\r\n  </div>\r\n  <div class=\"col-2\">\r\n  </div>\r\n</div>     \r\n      </div>\r\n      </div>\r\n      \r\n            );\r\n    }\r\n}\r\n \r\nfunction addPatient(newName, newDateOfBirh, status) {\r\n    const patient =\r\n    {\r\n        \"Name\" : newName,\r\n        \"DateOfBirth\" : new Date(),\r\n        \"Status\" : status\r\n    }\r\n    fetch('https://localhost:44399/api/patient/', \r\n    {method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n     body: JSON.stringify(patient) })\r\n    .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ contacts: data })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n\r\nexport default PatientCard;","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js",["46","47","48","49","50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":20,"nodeType":"58","messageId":"59","endLine":4,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":5,"column":3,"nodeType":"58","messageId":"59","endLine":5,"endColumn":9},{"ruleId":"56","severity":1,"message":"61","line":6,"column":3,"nodeType":"58","messageId":"59","endLine":6,"endColumn":8},{"ruleId":"56","severity":1,"message":"62","line":7,"column":3,"nodeType":"58","messageId":"59","endLine":7,"endColumn":7},{"ruleId":"56","severity":1,"message":"63","line":9,"column":7,"nodeType":"58","messageId":"59","endLine":9,"endColumn":15},{"ruleId":"56","severity":1,"message":"64","line":10,"column":7,"nodeType":"58","messageId":"59","endLine":10,"endColumn":20},{"ruleId":"56","severity":1,"message":"65","line":11,"column":7,"nodeType":"58","messageId":"59","endLine":11,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":50,"column":3,"nodeType":"68","endLine":50,"endColumn":36},{"ruleId":"56","severity":1,"message":"63","line":2,"column":7,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":3,"column":7,"nodeType":"58","messageId":"59","endLine":3,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":4,"column":7,"nodeType":"58","messageId":"59","endLine":4,"endColumn":20},{"ruleId":"56","severity":1,"message":"65","line":5,"column":7,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":8,"column":5,"nodeType":"72","messageId":"73","endLine":10,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":19,"column":3,"nodeType":"68","endLine":19,"endColumn":36},{"ruleId":"56","severity":1,"message":"63","line":2,"column":7,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":3,"column":7,"nodeType":"58","messageId":"59","endLine":3,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":4,"column":7,"nodeType":"58","messageId":"59","endLine":4,"endColumn":20},{"ruleId":"56","severity":1,"message":"65","line":5,"column":7,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":8,"column":3,"nodeType":"72","messageId":"73","endLine":10,"endColumn":4},{"ruleId":"66","severity":1,"message":"67","line":27,"column":13,"nodeType":"68","endLine":27,"endColumn":46},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'ReactDOM' is assigned a value but never used.","'BrowserRouter' is assigned a value but never used.","'hashHistory' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Route' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]