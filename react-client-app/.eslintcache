[{"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js":"1","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js":"2","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js":"3","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js":"4","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js":"5","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\login.component.js":"6","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\signup.component.js":"7","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patients.js":"8","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\auth\\authProvider.js":"9"},{"size":793,"mtime":1615128778617,"results":"10","hashOfConfig":"11"},{"size":1762,"mtime":1615021153677,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4233,"mtime":1615128713642,"results":"14","hashOfConfig":"11"},{"size":4402,"mtime":1615128713639,"results":"15","hashOfConfig":"11"},{"size":2350,"mtime":1614030373353,"results":"16","hashOfConfig":"11"},{"size":2566,"mtime":1614022965351,"results":"17","hashOfConfig":"11"},{"size":7335,"mtime":1615128682938,"results":"18","hashOfConfig":"11"},{"size":812,"mtime":1615128682838,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12sycmg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\index.js",["43","44","45","46"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\App.js",["47","48","49","50"],"import React, { useState, Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport Patients from \"./components/patients\";\nimport PatientCard from \"./components/patient-card\";\nimport PatientCardUpdate from \"./components/patient-card-update\";\nimport { useHistory } from \"react-router-dom\"; \n\nconst ReactDOM = require('react-dom');\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\nconst hashHistory = require('react-router-dom').hashHistory;\n\nclass App extends Component {\n  render() {\n    return (<Router history={hashHistory}>\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n                </li>\n              </ul>\n        </nav>\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n            <Switch>\n              <Route exact path='/' component={SignUp} />\n              <Route path=\"/sign-in\" component={Login} />\n              <Route path=\"/sign-up\" component={SignUp} />\n              <Route path=\"/patients\" component={Patients} />\n              <Route path=\"/add-patient\" component={PatientCard} />\n              <Route path=\"/update-patient\" component={PatientCardUpdate} />\n            </Switch>\n          </div>\n        </div>\n      </div></Router>\n    );\n  }\n}\n\nexport default App;",["51","52"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\reportWebVitals.js",[],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card.js",["53","54","55","56","57","58","59"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patient-card-update.js",["60","61","62","63","64","65"],"import React, { Component } from \"react\";\r\nimport { authProvider } from \"./../auth/authProvider\";\r\nconst ReactDOM = require(\"react-dom\");\r\nconst Route = require(\"react-router-dom\").Route;\r\nconst BrowserRouter = require(\"react-router-dom\").BrowserRouter;\r\nconst hashHistory = require(\"react-router-dom\").hashHistory;\r\n\r\nclass PatientCardUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div class=\"container-fluid\">\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarTogglerDemo03\"\r\n              aria-controls=\"navbarTogglerDemo03\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n              Pneumonia Auto diagnosis\r\n            </a>\r\n\r\n            <div\r\n              class=\"collapse navbar-collapse\"\r\n              id=\"navbarTogglerDemo03\"\r\n            ></div>\r\n          </div>\r\n        </nav>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <center>\r\n                <h1 class=\"h3 mb-3 fw-normal\">Update patient:</h1>\r\n              </center>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <form class=\"row g-5\">\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={this.props.name}\r\n                    class=\"form-control\"\r\n                    id=\"inputName\"\r\n                    placeholder=\"Sam Smith\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <label for=\"inputAddress\" class=\"form-label\">\r\n                    Date Of Birth\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={this.props.date}\r\n                    class=\"form-control\"\r\n                    id=\"inputDate\"\r\n                    placeholder=\"2019-01-31T10:00:00.000Z\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      defaultChecked={this.props.status}\r\n                      type=\"checkbox\"\r\n                      id=\"gridCheck\"\r\n                    />\r\n                    <label class=\"form-check-label\" for=\"gridCheck\">\r\n                      Pneumonia status\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-9\">\r\n                  <button\r\n                    onClick={() =>\r\n                      updatePatient(\r\n                        this.props.id,\r\n                        document.getElementById(\"inputName\").value,\r\n                        document.getElementById(\"inputDate\").value,\r\n                        document.getElementById(\"gridCheck\").checked ? 1 : 0\r\n                      )\r\n                    }\r\n                    class=\"btn btn-success\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction updatePatient(id, newName, newDateOfBirh, status) {\r\n  const patient = {\r\n    Id: id,\r\n    Name: newName,\r\n    DateOfBirth: new Date(),\r\n    Status: status,\r\n  };\r\n\r\n  authProvider.getAccessToken().then(res => \r\n    fetch(\"https://localhost:44399/api/patient/\" + id, \r\n    {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(patient),\r\n      headers: \r\n      { \r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${res.accessToken}`, \r\n       },\r\n       \r\n    }\r\n    ));\r\n}\r\n\r\nexport default PatientCardUpdate;\r\n","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\login.component.js",["66","67","68","69","70"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Patients from './patients';\r\nimport { useHistory } from \"react-router-dom\"; \r\nconst BrowserRouter = require('react-router-dom').BrowserRouter;\r\nconst hashHistory = require('react-router-dom').hashHistory;\r\nconst ReactDOM = require('react-dom');\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return ( \r\n            <Router history={hashHistory}>\r\n            <Route\r\n              path=\"/sign-in\"\r\n              exact\r\n              render={(props) => (\r\n                <div>\r\n            <form>\r\n                <h3>Sign In</h3>\r\n               \r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n                <Link\r\n                        class=\"btn btn-outline-success\"\r\n                        to=\"/patients\"\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                            logInUser(\r\n                              document.getElementById(\"inputEmail\").value,\r\n                              document.getElementById(\"inputPassword\").value\r\n                            )}\r\n                      >\r\n                        Search\r\n                      </Link>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">sign in?</a>\r\n                </p>\r\n            </form>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route path=\"/patients\" component={Patients} />\r\n      </Router>\r\n        );\r\n    }\r\n}\r\nfunction logInUser(email, password) {\r\n    const patient = {\r\n      Email: email,\r\n      Password: password   \r\n    };\r\n    fetch(\"https://localhost:44399/api/user/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //body: JSON.stringify(patient),\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n\r\n\r\n","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\signup.component.js",["71","72"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Patients from './patients';\r\n\r\nclass SignUp extends Component {\r\n    \r\n    render() {\r\n        return ( \r\n            <Router>\r\n            <Route\r\n              path=\"/sign-up\"\r\n              exact\r\n              render={(props) => (\r\n                <div>\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" id=\"inputFirstName\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" id=\"inputLastName\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n                <Link\r\n                        class=\"btn btn-outline-success\"\r\n                        to=\"/patients\"\r\n                        type=\"submit\"\r\n                        onClick={() =>\r\n                            addUser(\r\n                              document.getElementById(\"inputEmail\").value,\r\n                              document.getElementById(\"inputPassword\").value\r\n                            )}\r\n                      >\r\n                        Search\r\n                      </Link>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">sign in?</a>\r\n                </p>\r\n            </form>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route path=\"/patients\" component={Patients} />\r\n      </Router>\r\n        );\r\n    }\r\n}\r\n\r\nfunction addUser(email, password) {\r\n    const patient = {\r\n      Email: email,\r\n      Password: password   \r\n    };\r\n    fetch(\"https://localhost:44399/api/user/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(patient),\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n\r\n  export default SignUp;","C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\components\\patients.js",["73","74","75","76","77","78"],"C:\\Work\\PneumoniaAutoDiagnosis\\react-client-app\\src\\auth\\authProvider.js",[],{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":10,"column":10,"nodeType":"81","messageId":"82","endLine":10,"endColumn":18},{"ruleId":"79","severity":1,"message":"84","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"85","line":11,"column":18,"nodeType":"81","messageId":"82","endLine":11,"endColumn":26},{"ruleId":"79","severity":1,"message":"86","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":13,"column":10,"nodeType":"81","messageId":"82","endLine":13,"endColumn":20},{"ruleId":"79","severity":1,"message":"88","line":15,"column":7,"nodeType":"81","messageId":"82","endLine":15,"endColumn":15},{"ruleId":"79","severity":1,"message":"89","line":16,"column":7,"nodeType":"81","messageId":"82","endLine":16,"endColumn":20},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"79","severity":1,"message":"88","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":15},{"ruleId":"79","severity":1,"message":"94","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":12},{"ruleId":"79","severity":1,"message":"89","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"79","severity":1,"message":"95","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":11,"endColumn":4},{"ruleId":"100","severity":1,"message":"101","line":28,"column":13,"nodeType":"102","endLine":28,"endColumn":46},{"ruleId":"79","severity":1,"message":"103","line":114,"column":7,"nodeType":"81","messageId":"82","endLine":114,"endColumn":8},{"ruleId":"79","severity":1,"message":"88","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":15},{"ruleId":"79","severity":1,"message":"94","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":12},{"ruleId":"79","severity":1,"message":"89","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"79","severity":1,"message":"95","line":6,"column":7,"nodeType":"81","messageId":"82","endLine":6,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":11,"endColumn":4},{"ruleId":"100","severity":1,"message":"101","line":28,"column":13,"nodeType":"102","endLine":28,"endColumn":46},{"ruleId":"79","severity":1,"message":"104","line":2,"column":35,"nodeType":"81","messageId":"82","endLine":2,"endColumn":41},{"ruleId":"79","severity":1,"message":"87","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":20},{"ruleId":"79","severity":1,"message":"89","line":5,"column":7,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":42,"column":40,"nodeType":"102","endLine":42,"endColumn":52},{"ruleId":"79","severity":1,"message":"105","line":54,"column":11,"nodeType":"81","messageId":"82","endLine":54,"endColumn":18},{"ruleId":"79","severity":1,"message":"104","line":2,"column":35,"nodeType":"81","messageId":"82","endLine":2,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":49,"column":40,"nodeType":"102","endLine":49,"endColumn":52},{"ruleId":"79","severity":1,"message":"104","line":2,"column":35,"nodeType":"81","messageId":"82","endLine":2,"endColumn":41},{"ruleId":"79","severity":1,"message":"87","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"79","severity":1,"message":"106","line":6,"column":9,"nodeType":"81","messageId":"82","endLine":6,"endColumn":27},{"ruleId":"79","severity":1,"message":"89","line":10,"column":7,"nodeType":"81","messageId":"82","endLine":10,"endColumn":20},{"ruleId":"79","severity":1,"message":"88","line":12,"column":7,"nodeType":"81","messageId":"82","endLine":12,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":103,"column":19,"nodeType":"102","endLine":103,"endColumn":52},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'Logger' is defined but never used.","'LogLevel' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'ReactDOM' is assigned a value but never used.","'BrowserRouter' is assigned a value but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'Route' is assigned a value but never used.","'hashHistory' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'d' is assigned a value but never used.","'Switch' is defined but never used.","'patient' is assigned a value but never used.","'createAuthProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]